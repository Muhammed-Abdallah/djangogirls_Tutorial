install python 3.6
install atom
create folder c:\djangogirls
cd c:\djangogirls

c:\Python36\python.exe -m venv myvenv

myvenv\Scripts\activate

add proxy if needed
set https_proxy=https://username:xxxxxxxxx@proxyip:proxyport
set http_proxy=http://username:xxxxxxxxx@10.230.233.30:5110
10.230.233.30:5110

python -m pip install --upgrade pip

First create a requirements.txt file inside of djangogirls/ folder
add the below text to the file
Django~=2.0.6

pip install -r requirements.txt

download Git from git-scm.com

########## add the dot in the end of the command
django-admin.exe startproject mysite .


adding the new lines mysite/settings.py

    STATIC_URL = '/static/'
    STATIC_ROOT = os.path.join(BASE_DIR, 'static')

    ALLOWED_HOSTS = ['127.0.0.1']

python manage.py migrate

C:\djangogirls\mysite>python manage.py runserver



/*

There is a concept in programming called object-oriented programming. The idea is that instead of writing everything as a boring sequence of programming instructions, we can model things and define how they interact with each other.

So what is an object? It is a collection of properties and actions. It sounds weird, but we will give you an example.

*/


TO OPEN NEW cmd WINDOW and send commands to your new project

open cmd
go to the folder c:\djangogirls
run the activation command (myvenv\Scripts\activate)
now you can send commands while the server is running the other window


////////////////git ///////////////
git init

to solve CRLF error
git config --global core.autocrlf false

git add --all

git commit -m "xxxxxxxxxxany messagexxxxxxxxxxxxxxxx"


gitk   //for GUI Git


In case you did something wrong, which for sure never happens ;), you can replace local changes using the command
git checkout -- <filename>

git fetch origin
git reset --hard origin/master


//////////////////////// GIT add ///////////////////////
git add --all will add the deleted file too (removing files from index that are no longer in the working tree), while git add . does not.

For new files and files already tracked in current working tree:

git add .
For only files already tracked in current working tree:

git add -u
For new files, files already tracked in current working tree, and remove files from index that are no longer in the working tree:

git add -A
or

git add --all

//////////////////////// GIT add ///////////////////////



python manage.py startapp blog
python manage.py makemigrations blog
python manage.py migrate blog

python manage.py migrate
python manage.py createsuperuser
